// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int       @id @default(autoincrement())
  UserName             String
  Email                String    @unique
  contrasena           String?
  UserRole             String        @unique   @default("NormalProfile")   
  FacebookId String?  @unique
   googleId String?   @unique
  ProfilePictureURL      String?
  ExternalAccessToken    String?
  galleries            Media[] 
  donations            Donations[] 
  comment              Comments[]
 Publicaciones       Post[]
 answer Answer[]
}





model Post{
 TypeOf String 
id Int  @id @default(autoincrement())
Title String
Description String
timestamp    DateTime
Media Media[]
User_id     Int
User        User      @relation(fields: [User_id], references: [id])
Comments Comments[]
}



model Media {
  id          Int       @id @default(autoincrement())
  imgName     String
  ImageUrl    String
  Description String
  Post_id Int
  Post  Post @relation(fields: [Post_id],references: [id])
  User_id     Int
  User        User      @relation(fields: [User_id], references: [id])
}

model Donations {
  id                Int       @id @default(autoincrement())
  amount            Decimal   @db.Decimal(10,2)
  concurrency       String
  paypament_status  String
  paypament_method  String
  stripe_charge_id  String
  User_id           Int
  operationdate     DateTime
  timeofoperation   DateTime
  User              User      @relation(fields: [User_id], references: [id])
}



model Comments {
  id  Int       @id @default(autoincrement())
  user         User?     @relation(fields: [user_id], references: [id])
  user_id      Int?

  comment      String
  timestamp    DateTime
  Post_id Int
  Post  Post @relation(fields: [Post_id],references: [id])
  Answer Answer[]
 @@index([user_id], name: "user_id")
}

model Answer{
id Int @id @default(autoincrement())
Answer String
Comment_id Int
Comments Comments @relation(fields: [Comment_id], references: [id])
user         User?     @relation(fields: [user_id], references: [id])
  user_id      Int?

}